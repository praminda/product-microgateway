// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wso2/discovery/config/enforcer/config.proto

package org.wso2.gateway.discovery.config.enforcer;

/**
 * <pre>
 * Enforcer config model
 * </pre>
 *
 * Protobuf type {@code wso2.discovery.config.enforcer.Config}
 */
public final class Config extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:wso2.discovery.config.enforcer.Config)
    ConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Config.newBuilder() to construct.
  private Config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Config() {
    jwtTokenConfig_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Config();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Config(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              jwtTokenConfig_ = new java.util.ArrayList<org.wso2.gateway.discovery.config.enforcer.Issuer>();
              mutable_bitField0_ |= 0x00000001;
            }
            jwtTokenConfig_.add(
                input.readMessage(org.wso2.gateway.discovery.config.enforcer.Issuer.parser(), extensionRegistry));
            break;
          }
          case 18: {
            org.wso2.gateway.discovery.config.enforcer.Keystore.Builder subBuilder = null;
            if (keystore_ != null) {
              subBuilder = keystore_.toBuilder();
            }
            keystore_ = input.readMessage(org.wso2.gateway.discovery.config.enforcer.Keystore.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(keystore_);
              keystore_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            org.wso2.gateway.discovery.config.enforcer.Truststore.Builder subBuilder = null;
            if (truststore_ != null) {
              subBuilder = truststore_.toBuilder();
            }
            truststore_ = input.readMessage(org.wso2.gateway.discovery.config.enforcer.Truststore.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(truststore_);
              truststore_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            org.wso2.gateway.discovery.config.enforcer.EventHub.Builder subBuilder = null;
            if (eventhub_ != null) {
              subBuilder = eventhub_.toBuilder();
            }
            eventhub_ = input.readMessage(org.wso2.gateway.discovery.config.enforcer.EventHub.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(eventhub_);
              eventhub_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            org.wso2.gateway.discovery.config.enforcer.AuthService.Builder subBuilder = null;
            if (authService_ != null) {
              subBuilder = authService_.toBuilder();
            }
            authService_ = input.readMessage(org.wso2.gateway.discovery.config.enforcer.AuthService.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(authService_);
              authService_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            org.wso2.gateway.discovery.config.enforcer.AmCredentials.Builder subBuilder = null;
            if (apimCredentials_ != null) {
              subBuilder = apimCredentials_.toBuilder();
            }
            apimCredentials_ = input.readMessage(org.wso2.gateway.discovery.config.enforcer.AmCredentials.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(apimCredentials_);
              apimCredentials_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        jwtTokenConfig_ = java.util.Collections.unmodifiableList(jwtTokenConfig_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.wso2.gateway.discovery.config.enforcer.ConfigProto.internal_static_wso2_discovery_config_enforcer_Config_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.wso2.gateway.discovery.config.enforcer.ConfigProto.internal_static_wso2_discovery_config_enforcer_Config_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.wso2.gateway.discovery.config.enforcer.Config.class, org.wso2.gateway.discovery.config.enforcer.Config.Builder.class);
  }

  public static final int JWTTOKENCONFIG_FIELD_NUMBER = 1;
  private java.util.List<org.wso2.gateway.discovery.config.enforcer.Issuer> jwtTokenConfig_;
  /**
   * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
   */
  @java.lang.Override
  public java.util.List<org.wso2.gateway.discovery.config.enforcer.Issuer> getJwtTokenConfigList() {
    return jwtTokenConfig_;
  }
  /**
   * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.wso2.gateway.discovery.config.enforcer.IssuerOrBuilder> 
      getJwtTokenConfigOrBuilderList() {
    return jwtTokenConfig_;
  }
  /**
   * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
   */
  @java.lang.Override
  public int getJwtTokenConfigCount() {
    return jwtTokenConfig_.size();
  }
  /**
   * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
   */
  @java.lang.Override
  public org.wso2.gateway.discovery.config.enforcer.Issuer getJwtTokenConfig(int index) {
    return jwtTokenConfig_.get(index);
  }
  /**
   * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
   */
  @java.lang.Override
  public org.wso2.gateway.discovery.config.enforcer.IssuerOrBuilder getJwtTokenConfigOrBuilder(
      int index) {
    return jwtTokenConfig_.get(index);
  }

  public static final int KEYSTORE_FIELD_NUMBER = 2;
  private org.wso2.gateway.discovery.config.enforcer.Keystore keystore_;
  /**
   * <code>.wso2.discovery.config.enforcer.Keystore keystore = 2;</code>
   * @return Whether the keystore field is set.
   */
  @java.lang.Override
  public boolean hasKeystore() {
    return keystore_ != null;
  }
  /**
   * <code>.wso2.discovery.config.enforcer.Keystore keystore = 2;</code>
   * @return The keystore.
   */
  @java.lang.Override
  public org.wso2.gateway.discovery.config.enforcer.Keystore getKeystore() {
    return keystore_ == null ? org.wso2.gateway.discovery.config.enforcer.Keystore.getDefaultInstance() : keystore_;
  }
  /**
   * <code>.wso2.discovery.config.enforcer.Keystore keystore = 2;</code>
   */
  @java.lang.Override
  public org.wso2.gateway.discovery.config.enforcer.KeystoreOrBuilder getKeystoreOrBuilder() {
    return getKeystore();
  }

  public static final int TRUSTSTORE_FIELD_NUMBER = 3;
  private org.wso2.gateway.discovery.config.enforcer.Truststore truststore_;
  /**
   * <code>.wso2.discovery.config.enforcer.Truststore truststore = 3;</code>
   * @return Whether the truststore field is set.
   */
  @java.lang.Override
  public boolean hasTruststore() {
    return truststore_ != null;
  }
  /**
   * <code>.wso2.discovery.config.enforcer.Truststore truststore = 3;</code>
   * @return The truststore.
   */
  @java.lang.Override
  public org.wso2.gateway.discovery.config.enforcer.Truststore getTruststore() {
    return truststore_ == null ? org.wso2.gateway.discovery.config.enforcer.Truststore.getDefaultInstance() : truststore_;
  }
  /**
   * <code>.wso2.discovery.config.enforcer.Truststore truststore = 3;</code>
   */
  @java.lang.Override
  public org.wso2.gateway.discovery.config.enforcer.TruststoreOrBuilder getTruststoreOrBuilder() {
    return getTruststore();
  }

  public static final int EVENTHUB_FIELD_NUMBER = 4;
  private org.wso2.gateway.discovery.config.enforcer.EventHub eventhub_;
  /**
   * <code>.wso2.discovery.config.enforcer.EventHub eventhub = 4;</code>
   * @return Whether the eventhub field is set.
   */
  @java.lang.Override
  public boolean hasEventhub() {
    return eventhub_ != null;
  }
  /**
   * <code>.wso2.discovery.config.enforcer.EventHub eventhub = 4;</code>
   * @return The eventhub.
   */
  @java.lang.Override
  public org.wso2.gateway.discovery.config.enforcer.EventHub getEventhub() {
    return eventhub_ == null ? org.wso2.gateway.discovery.config.enforcer.EventHub.getDefaultInstance() : eventhub_;
  }
  /**
   * <code>.wso2.discovery.config.enforcer.EventHub eventhub = 4;</code>
   */
  @java.lang.Override
  public org.wso2.gateway.discovery.config.enforcer.EventHubOrBuilder getEventhubOrBuilder() {
    return getEventhub();
  }

  public static final int AUTHSERVICE_FIELD_NUMBER = 5;
  private org.wso2.gateway.discovery.config.enforcer.AuthService authService_;
  /**
   * <code>.wso2.discovery.config.enforcer.AuthService authService = 5;</code>
   * @return Whether the authService field is set.
   */
  @java.lang.Override
  public boolean hasAuthService() {
    return authService_ != null;
  }
  /**
   * <code>.wso2.discovery.config.enforcer.AuthService authService = 5;</code>
   * @return The authService.
   */
  @java.lang.Override
  public org.wso2.gateway.discovery.config.enforcer.AuthService getAuthService() {
    return authService_ == null ? org.wso2.gateway.discovery.config.enforcer.AuthService.getDefaultInstance() : authService_;
  }
  /**
   * <code>.wso2.discovery.config.enforcer.AuthService authService = 5;</code>
   */
  @java.lang.Override
  public org.wso2.gateway.discovery.config.enforcer.AuthServiceOrBuilder getAuthServiceOrBuilder() {
    return getAuthService();
  }

  public static final int APIMCREDENTIALS_FIELD_NUMBER = 6;
  private org.wso2.gateway.discovery.config.enforcer.AmCredentials apimCredentials_;
  /**
   * <code>.wso2.discovery.config.enforcer.AmCredentials apimCredentials = 6;</code>
   * @return Whether the apimCredentials field is set.
   */
  @java.lang.Override
  public boolean hasApimCredentials() {
    return apimCredentials_ != null;
  }
  /**
   * <code>.wso2.discovery.config.enforcer.AmCredentials apimCredentials = 6;</code>
   * @return The apimCredentials.
   */
  @java.lang.Override
  public org.wso2.gateway.discovery.config.enforcer.AmCredentials getApimCredentials() {
    return apimCredentials_ == null ? org.wso2.gateway.discovery.config.enforcer.AmCredentials.getDefaultInstance() : apimCredentials_;
  }
  /**
   * <code>.wso2.discovery.config.enforcer.AmCredentials apimCredentials = 6;</code>
   */
  @java.lang.Override
  public org.wso2.gateway.discovery.config.enforcer.AmCredentialsOrBuilder getApimCredentialsOrBuilder() {
    return getApimCredentials();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < jwtTokenConfig_.size(); i++) {
      output.writeMessage(1, jwtTokenConfig_.get(i));
    }
    if (keystore_ != null) {
      output.writeMessage(2, getKeystore());
    }
    if (truststore_ != null) {
      output.writeMessage(3, getTruststore());
    }
    if (eventhub_ != null) {
      output.writeMessage(4, getEventhub());
    }
    if (authService_ != null) {
      output.writeMessage(5, getAuthService());
    }
    if (apimCredentials_ != null) {
      output.writeMessage(6, getApimCredentials());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < jwtTokenConfig_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, jwtTokenConfig_.get(i));
    }
    if (keystore_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getKeystore());
    }
    if (truststore_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getTruststore());
    }
    if (eventhub_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getEventhub());
    }
    if (authService_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getAuthService());
    }
    if (apimCredentials_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getApimCredentials());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.wso2.gateway.discovery.config.enforcer.Config)) {
      return super.equals(obj);
    }
    org.wso2.gateway.discovery.config.enforcer.Config other = (org.wso2.gateway.discovery.config.enforcer.Config) obj;

    if (!getJwtTokenConfigList()
        .equals(other.getJwtTokenConfigList())) return false;
    if (hasKeystore() != other.hasKeystore()) return false;
    if (hasKeystore()) {
      if (!getKeystore()
          .equals(other.getKeystore())) return false;
    }
    if (hasTruststore() != other.hasTruststore()) return false;
    if (hasTruststore()) {
      if (!getTruststore()
          .equals(other.getTruststore())) return false;
    }
    if (hasEventhub() != other.hasEventhub()) return false;
    if (hasEventhub()) {
      if (!getEventhub()
          .equals(other.getEventhub())) return false;
    }
    if (hasAuthService() != other.hasAuthService()) return false;
    if (hasAuthService()) {
      if (!getAuthService()
          .equals(other.getAuthService())) return false;
    }
    if (hasApimCredentials() != other.hasApimCredentials()) return false;
    if (hasApimCredentials()) {
      if (!getApimCredentials()
          .equals(other.getApimCredentials())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getJwtTokenConfigCount() > 0) {
      hash = (37 * hash) + JWTTOKENCONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getJwtTokenConfigList().hashCode();
    }
    if (hasKeystore()) {
      hash = (37 * hash) + KEYSTORE_FIELD_NUMBER;
      hash = (53 * hash) + getKeystore().hashCode();
    }
    if (hasTruststore()) {
      hash = (37 * hash) + TRUSTSTORE_FIELD_NUMBER;
      hash = (53 * hash) + getTruststore().hashCode();
    }
    if (hasEventhub()) {
      hash = (37 * hash) + EVENTHUB_FIELD_NUMBER;
      hash = (53 * hash) + getEventhub().hashCode();
    }
    if (hasAuthService()) {
      hash = (37 * hash) + AUTHSERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getAuthService().hashCode();
    }
    if (hasApimCredentials()) {
      hash = (37 * hash) + APIMCREDENTIALS_FIELD_NUMBER;
      hash = (53 * hash) + getApimCredentials().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.wso2.gateway.discovery.config.enforcer.Config parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.gateway.discovery.config.enforcer.Config parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.gateway.discovery.config.enforcer.Config parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.gateway.discovery.config.enforcer.Config parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.gateway.discovery.config.enforcer.Config parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.wso2.gateway.discovery.config.enforcer.Config parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.wso2.gateway.discovery.config.enforcer.Config parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.gateway.discovery.config.enforcer.Config parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.gateway.discovery.config.enforcer.Config parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.wso2.gateway.discovery.config.enforcer.Config parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.wso2.gateway.discovery.config.enforcer.Config parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.wso2.gateway.discovery.config.enforcer.Config parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.wso2.gateway.discovery.config.enforcer.Config prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Enforcer config model
   * </pre>
   *
   * Protobuf type {@code wso2.discovery.config.enforcer.Config}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:wso2.discovery.config.enforcer.Config)
      org.wso2.gateway.discovery.config.enforcer.ConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.wso2.gateway.discovery.config.enforcer.ConfigProto.internal_static_wso2_discovery_config_enforcer_Config_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.wso2.gateway.discovery.config.enforcer.ConfigProto.internal_static_wso2_discovery_config_enforcer_Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.wso2.gateway.discovery.config.enforcer.Config.class, org.wso2.gateway.discovery.config.enforcer.Config.Builder.class);
    }

    // Construct using org.wso2.gateway.discovery.config.enforcer.Config.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getJwtTokenConfigFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (jwtTokenConfigBuilder_ == null) {
        jwtTokenConfig_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        jwtTokenConfigBuilder_.clear();
      }
      if (keystoreBuilder_ == null) {
        keystore_ = null;
      } else {
        keystore_ = null;
        keystoreBuilder_ = null;
      }
      if (truststoreBuilder_ == null) {
        truststore_ = null;
      } else {
        truststore_ = null;
        truststoreBuilder_ = null;
      }
      if (eventhubBuilder_ == null) {
        eventhub_ = null;
      } else {
        eventhub_ = null;
        eventhubBuilder_ = null;
      }
      if (authServiceBuilder_ == null) {
        authService_ = null;
      } else {
        authService_ = null;
        authServiceBuilder_ = null;
      }
      if (apimCredentialsBuilder_ == null) {
        apimCredentials_ = null;
      } else {
        apimCredentials_ = null;
        apimCredentialsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.wso2.gateway.discovery.config.enforcer.ConfigProto.internal_static_wso2_discovery_config_enforcer_Config_descriptor;
    }

    @java.lang.Override
    public org.wso2.gateway.discovery.config.enforcer.Config getDefaultInstanceForType() {
      return org.wso2.gateway.discovery.config.enforcer.Config.getDefaultInstance();
    }

    @java.lang.Override
    public org.wso2.gateway.discovery.config.enforcer.Config build() {
      org.wso2.gateway.discovery.config.enforcer.Config result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.wso2.gateway.discovery.config.enforcer.Config buildPartial() {
      org.wso2.gateway.discovery.config.enforcer.Config result = new org.wso2.gateway.discovery.config.enforcer.Config(this);
      int from_bitField0_ = bitField0_;
      if (jwtTokenConfigBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          jwtTokenConfig_ = java.util.Collections.unmodifiableList(jwtTokenConfig_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.jwtTokenConfig_ = jwtTokenConfig_;
      } else {
        result.jwtTokenConfig_ = jwtTokenConfigBuilder_.build();
      }
      if (keystoreBuilder_ == null) {
        result.keystore_ = keystore_;
      } else {
        result.keystore_ = keystoreBuilder_.build();
      }
      if (truststoreBuilder_ == null) {
        result.truststore_ = truststore_;
      } else {
        result.truststore_ = truststoreBuilder_.build();
      }
      if (eventhubBuilder_ == null) {
        result.eventhub_ = eventhub_;
      } else {
        result.eventhub_ = eventhubBuilder_.build();
      }
      if (authServiceBuilder_ == null) {
        result.authService_ = authService_;
      } else {
        result.authService_ = authServiceBuilder_.build();
      }
      if (apimCredentialsBuilder_ == null) {
        result.apimCredentials_ = apimCredentials_;
      } else {
        result.apimCredentials_ = apimCredentialsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.wso2.gateway.discovery.config.enforcer.Config) {
        return mergeFrom((org.wso2.gateway.discovery.config.enforcer.Config)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.wso2.gateway.discovery.config.enforcer.Config other) {
      if (other == org.wso2.gateway.discovery.config.enforcer.Config.getDefaultInstance()) return this;
      if (jwtTokenConfigBuilder_ == null) {
        if (!other.jwtTokenConfig_.isEmpty()) {
          if (jwtTokenConfig_.isEmpty()) {
            jwtTokenConfig_ = other.jwtTokenConfig_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureJwtTokenConfigIsMutable();
            jwtTokenConfig_.addAll(other.jwtTokenConfig_);
          }
          onChanged();
        }
      } else {
        if (!other.jwtTokenConfig_.isEmpty()) {
          if (jwtTokenConfigBuilder_.isEmpty()) {
            jwtTokenConfigBuilder_.dispose();
            jwtTokenConfigBuilder_ = null;
            jwtTokenConfig_ = other.jwtTokenConfig_;
            bitField0_ = (bitField0_ & ~0x00000001);
            jwtTokenConfigBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getJwtTokenConfigFieldBuilder() : null;
          } else {
            jwtTokenConfigBuilder_.addAllMessages(other.jwtTokenConfig_);
          }
        }
      }
      if (other.hasKeystore()) {
        mergeKeystore(other.getKeystore());
      }
      if (other.hasTruststore()) {
        mergeTruststore(other.getTruststore());
      }
      if (other.hasEventhub()) {
        mergeEventhub(other.getEventhub());
      }
      if (other.hasAuthService()) {
        mergeAuthService(other.getAuthService());
      }
      if (other.hasApimCredentials()) {
        mergeApimCredentials(other.getApimCredentials());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.wso2.gateway.discovery.config.enforcer.Config parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.wso2.gateway.discovery.config.enforcer.Config) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<org.wso2.gateway.discovery.config.enforcer.Issuer> jwtTokenConfig_ =
      java.util.Collections.emptyList();
    private void ensureJwtTokenConfigIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        jwtTokenConfig_ = new java.util.ArrayList<org.wso2.gateway.discovery.config.enforcer.Issuer>(jwtTokenConfig_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.wso2.gateway.discovery.config.enforcer.Issuer, org.wso2.gateway.discovery.config.enforcer.Issuer.Builder, org.wso2.gateway.discovery.config.enforcer.IssuerOrBuilder> jwtTokenConfigBuilder_;

    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public java.util.List<org.wso2.gateway.discovery.config.enforcer.Issuer> getJwtTokenConfigList() {
      if (jwtTokenConfigBuilder_ == null) {
        return java.util.Collections.unmodifiableList(jwtTokenConfig_);
      } else {
        return jwtTokenConfigBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public int getJwtTokenConfigCount() {
      if (jwtTokenConfigBuilder_ == null) {
        return jwtTokenConfig_.size();
      } else {
        return jwtTokenConfigBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.Issuer getJwtTokenConfig(int index) {
      if (jwtTokenConfigBuilder_ == null) {
        return jwtTokenConfig_.get(index);
      } else {
        return jwtTokenConfigBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public Builder setJwtTokenConfig(
        int index, org.wso2.gateway.discovery.config.enforcer.Issuer value) {
      if (jwtTokenConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureJwtTokenConfigIsMutable();
        jwtTokenConfig_.set(index, value);
        onChanged();
      } else {
        jwtTokenConfigBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public Builder setJwtTokenConfig(
        int index, org.wso2.gateway.discovery.config.enforcer.Issuer.Builder builderForValue) {
      if (jwtTokenConfigBuilder_ == null) {
        ensureJwtTokenConfigIsMutable();
        jwtTokenConfig_.set(index, builderForValue.build());
        onChanged();
      } else {
        jwtTokenConfigBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public Builder addJwtTokenConfig(org.wso2.gateway.discovery.config.enforcer.Issuer value) {
      if (jwtTokenConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureJwtTokenConfigIsMutable();
        jwtTokenConfig_.add(value);
        onChanged();
      } else {
        jwtTokenConfigBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public Builder addJwtTokenConfig(
        int index, org.wso2.gateway.discovery.config.enforcer.Issuer value) {
      if (jwtTokenConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureJwtTokenConfigIsMutable();
        jwtTokenConfig_.add(index, value);
        onChanged();
      } else {
        jwtTokenConfigBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public Builder addJwtTokenConfig(
        org.wso2.gateway.discovery.config.enforcer.Issuer.Builder builderForValue) {
      if (jwtTokenConfigBuilder_ == null) {
        ensureJwtTokenConfigIsMutable();
        jwtTokenConfig_.add(builderForValue.build());
        onChanged();
      } else {
        jwtTokenConfigBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public Builder addJwtTokenConfig(
        int index, org.wso2.gateway.discovery.config.enforcer.Issuer.Builder builderForValue) {
      if (jwtTokenConfigBuilder_ == null) {
        ensureJwtTokenConfigIsMutable();
        jwtTokenConfig_.add(index, builderForValue.build());
        onChanged();
      } else {
        jwtTokenConfigBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public Builder addAllJwtTokenConfig(
        java.lang.Iterable<? extends org.wso2.gateway.discovery.config.enforcer.Issuer> values) {
      if (jwtTokenConfigBuilder_ == null) {
        ensureJwtTokenConfigIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, jwtTokenConfig_);
        onChanged();
      } else {
        jwtTokenConfigBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public Builder clearJwtTokenConfig() {
      if (jwtTokenConfigBuilder_ == null) {
        jwtTokenConfig_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        jwtTokenConfigBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public Builder removeJwtTokenConfig(int index) {
      if (jwtTokenConfigBuilder_ == null) {
        ensureJwtTokenConfigIsMutable();
        jwtTokenConfig_.remove(index);
        onChanged();
      } else {
        jwtTokenConfigBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.Issuer.Builder getJwtTokenConfigBuilder(
        int index) {
      return getJwtTokenConfigFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.IssuerOrBuilder getJwtTokenConfigOrBuilder(
        int index) {
      if (jwtTokenConfigBuilder_ == null) {
        return jwtTokenConfig_.get(index);  } else {
        return jwtTokenConfigBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public java.util.List<? extends org.wso2.gateway.discovery.config.enforcer.IssuerOrBuilder> 
         getJwtTokenConfigOrBuilderList() {
      if (jwtTokenConfigBuilder_ != null) {
        return jwtTokenConfigBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(jwtTokenConfig_);
      }
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.Issuer.Builder addJwtTokenConfigBuilder() {
      return getJwtTokenConfigFieldBuilder().addBuilder(
          org.wso2.gateway.discovery.config.enforcer.Issuer.getDefaultInstance());
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.Issuer.Builder addJwtTokenConfigBuilder(
        int index) {
      return getJwtTokenConfigFieldBuilder().addBuilder(
          index, org.wso2.gateway.discovery.config.enforcer.Issuer.getDefaultInstance());
    }
    /**
     * <code>repeated .wso2.discovery.config.enforcer.Issuer jwtTokenConfig = 1;</code>
     */
    public java.util.List<org.wso2.gateway.discovery.config.enforcer.Issuer.Builder> 
         getJwtTokenConfigBuilderList() {
      return getJwtTokenConfigFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.wso2.gateway.discovery.config.enforcer.Issuer, org.wso2.gateway.discovery.config.enforcer.Issuer.Builder, org.wso2.gateway.discovery.config.enforcer.IssuerOrBuilder> 
        getJwtTokenConfigFieldBuilder() {
      if (jwtTokenConfigBuilder_ == null) {
        jwtTokenConfigBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.wso2.gateway.discovery.config.enforcer.Issuer, org.wso2.gateway.discovery.config.enforcer.Issuer.Builder, org.wso2.gateway.discovery.config.enforcer.IssuerOrBuilder>(
                jwtTokenConfig_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        jwtTokenConfig_ = null;
      }
      return jwtTokenConfigBuilder_;
    }

    private org.wso2.gateway.discovery.config.enforcer.Keystore keystore_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.wso2.gateway.discovery.config.enforcer.Keystore, org.wso2.gateway.discovery.config.enforcer.Keystore.Builder, org.wso2.gateway.discovery.config.enforcer.KeystoreOrBuilder> keystoreBuilder_;
    /**
     * <code>.wso2.discovery.config.enforcer.Keystore keystore = 2;</code>
     * @return Whether the keystore field is set.
     */
    public boolean hasKeystore() {
      return keystoreBuilder_ != null || keystore_ != null;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Keystore keystore = 2;</code>
     * @return The keystore.
     */
    public org.wso2.gateway.discovery.config.enforcer.Keystore getKeystore() {
      if (keystoreBuilder_ == null) {
        return keystore_ == null ? org.wso2.gateway.discovery.config.enforcer.Keystore.getDefaultInstance() : keystore_;
      } else {
        return keystoreBuilder_.getMessage();
      }
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Keystore keystore = 2;</code>
     */
    public Builder setKeystore(org.wso2.gateway.discovery.config.enforcer.Keystore value) {
      if (keystoreBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        keystore_ = value;
        onChanged();
      } else {
        keystoreBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Keystore keystore = 2;</code>
     */
    public Builder setKeystore(
        org.wso2.gateway.discovery.config.enforcer.Keystore.Builder builderForValue) {
      if (keystoreBuilder_ == null) {
        keystore_ = builderForValue.build();
        onChanged();
      } else {
        keystoreBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Keystore keystore = 2;</code>
     */
    public Builder mergeKeystore(org.wso2.gateway.discovery.config.enforcer.Keystore value) {
      if (keystoreBuilder_ == null) {
        if (keystore_ != null) {
          keystore_ =
            org.wso2.gateway.discovery.config.enforcer.Keystore.newBuilder(keystore_).mergeFrom(value).buildPartial();
        } else {
          keystore_ = value;
        }
        onChanged();
      } else {
        keystoreBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Keystore keystore = 2;</code>
     */
    public Builder clearKeystore() {
      if (keystoreBuilder_ == null) {
        keystore_ = null;
        onChanged();
      } else {
        keystore_ = null;
        keystoreBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Keystore keystore = 2;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.Keystore.Builder getKeystoreBuilder() {
      
      onChanged();
      return getKeystoreFieldBuilder().getBuilder();
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Keystore keystore = 2;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.KeystoreOrBuilder getKeystoreOrBuilder() {
      if (keystoreBuilder_ != null) {
        return keystoreBuilder_.getMessageOrBuilder();
      } else {
        return keystore_ == null ?
            org.wso2.gateway.discovery.config.enforcer.Keystore.getDefaultInstance() : keystore_;
      }
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Keystore keystore = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.wso2.gateway.discovery.config.enforcer.Keystore, org.wso2.gateway.discovery.config.enforcer.Keystore.Builder, org.wso2.gateway.discovery.config.enforcer.KeystoreOrBuilder> 
        getKeystoreFieldBuilder() {
      if (keystoreBuilder_ == null) {
        keystoreBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.wso2.gateway.discovery.config.enforcer.Keystore, org.wso2.gateway.discovery.config.enforcer.Keystore.Builder, org.wso2.gateway.discovery.config.enforcer.KeystoreOrBuilder>(
                getKeystore(),
                getParentForChildren(),
                isClean());
        keystore_ = null;
      }
      return keystoreBuilder_;
    }

    private org.wso2.gateway.discovery.config.enforcer.Truststore truststore_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.wso2.gateway.discovery.config.enforcer.Truststore, org.wso2.gateway.discovery.config.enforcer.Truststore.Builder, org.wso2.gateway.discovery.config.enforcer.TruststoreOrBuilder> truststoreBuilder_;
    /**
     * <code>.wso2.discovery.config.enforcer.Truststore truststore = 3;</code>
     * @return Whether the truststore field is set.
     */
    public boolean hasTruststore() {
      return truststoreBuilder_ != null || truststore_ != null;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Truststore truststore = 3;</code>
     * @return The truststore.
     */
    public org.wso2.gateway.discovery.config.enforcer.Truststore getTruststore() {
      if (truststoreBuilder_ == null) {
        return truststore_ == null ? org.wso2.gateway.discovery.config.enforcer.Truststore.getDefaultInstance() : truststore_;
      } else {
        return truststoreBuilder_.getMessage();
      }
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Truststore truststore = 3;</code>
     */
    public Builder setTruststore(org.wso2.gateway.discovery.config.enforcer.Truststore value) {
      if (truststoreBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        truststore_ = value;
        onChanged();
      } else {
        truststoreBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Truststore truststore = 3;</code>
     */
    public Builder setTruststore(
        org.wso2.gateway.discovery.config.enforcer.Truststore.Builder builderForValue) {
      if (truststoreBuilder_ == null) {
        truststore_ = builderForValue.build();
        onChanged();
      } else {
        truststoreBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Truststore truststore = 3;</code>
     */
    public Builder mergeTruststore(org.wso2.gateway.discovery.config.enforcer.Truststore value) {
      if (truststoreBuilder_ == null) {
        if (truststore_ != null) {
          truststore_ =
            org.wso2.gateway.discovery.config.enforcer.Truststore.newBuilder(truststore_).mergeFrom(value).buildPartial();
        } else {
          truststore_ = value;
        }
        onChanged();
      } else {
        truststoreBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Truststore truststore = 3;</code>
     */
    public Builder clearTruststore() {
      if (truststoreBuilder_ == null) {
        truststore_ = null;
        onChanged();
      } else {
        truststore_ = null;
        truststoreBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Truststore truststore = 3;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.Truststore.Builder getTruststoreBuilder() {
      
      onChanged();
      return getTruststoreFieldBuilder().getBuilder();
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Truststore truststore = 3;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.TruststoreOrBuilder getTruststoreOrBuilder() {
      if (truststoreBuilder_ != null) {
        return truststoreBuilder_.getMessageOrBuilder();
      } else {
        return truststore_ == null ?
            org.wso2.gateway.discovery.config.enforcer.Truststore.getDefaultInstance() : truststore_;
      }
    }
    /**
     * <code>.wso2.discovery.config.enforcer.Truststore truststore = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.wso2.gateway.discovery.config.enforcer.Truststore, org.wso2.gateway.discovery.config.enforcer.Truststore.Builder, org.wso2.gateway.discovery.config.enforcer.TruststoreOrBuilder> 
        getTruststoreFieldBuilder() {
      if (truststoreBuilder_ == null) {
        truststoreBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.wso2.gateway.discovery.config.enforcer.Truststore, org.wso2.gateway.discovery.config.enforcer.Truststore.Builder, org.wso2.gateway.discovery.config.enforcer.TruststoreOrBuilder>(
                getTruststore(),
                getParentForChildren(),
                isClean());
        truststore_ = null;
      }
      return truststoreBuilder_;
    }

    private org.wso2.gateway.discovery.config.enforcer.EventHub eventhub_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.wso2.gateway.discovery.config.enforcer.EventHub, org.wso2.gateway.discovery.config.enforcer.EventHub.Builder, org.wso2.gateway.discovery.config.enforcer.EventHubOrBuilder> eventhubBuilder_;
    /**
     * <code>.wso2.discovery.config.enforcer.EventHub eventhub = 4;</code>
     * @return Whether the eventhub field is set.
     */
    public boolean hasEventhub() {
      return eventhubBuilder_ != null || eventhub_ != null;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.EventHub eventhub = 4;</code>
     * @return The eventhub.
     */
    public org.wso2.gateway.discovery.config.enforcer.EventHub getEventhub() {
      if (eventhubBuilder_ == null) {
        return eventhub_ == null ? org.wso2.gateway.discovery.config.enforcer.EventHub.getDefaultInstance() : eventhub_;
      } else {
        return eventhubBuilder_.getMessage();
      }
    }
    /**
     * <code>.wso2.discovery.config.enforcer.EventHub eventhub = 4;</code>
     */
    public Builder setEventhub(org.wso2.gateway.discovery.config.enforcer.EventHub value) {
      if (eventhubBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        eventhub_ = value;
        onChanged();
      } else {
        eventhubBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.EventHub eventhub = 4;</code>
     */
    public Builder setEventhub(
        org.wso2.gateway.discovery.config.enforcer.EventHub.Builder builderForValue) {
      if (eventhubBuilder_ == null) {
        eventhub_ = builderForValue.build();
        onChanged();
      } else {
        eventhubBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.EventHub eventhub = 4;</code>
     */
    public Builder mergeEventhub(org.wso2.gateway.discovery.config.enforcer.EventHub value) {
      if (eventhubBuilder_ == null) {
        if (eventhub_ != null) {
          eventhub_ =
            org.wso2.gateway.discovery.config.enforcer.EventHub.newBuilder(eventhub_).mergeFrom(value).buildPartial();
        } else {
          eventhub_ = value;
        }
        onChanged();
      } else {
        eventhubBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.EventHub eventhub = 4;</code>
     */
    public Builder clearEventhub() {
      if (eventhubBuilder_ == null) {
        eventhub_ = null;
        onChanged();
      } else {
        eventhub_ = null;
        eventhubBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.EventHub eventhub = 4;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.EventHub.Builder getEventhubBuilder() {
      
      onChanged();
      return getEventhubFieldBuilder().getBuilder();
    }
    /**
     * <code>.wso2.discovery.config.enforcer.EventHub eventhub = 4;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.EventHubOrBuilder getEventhubOrBuilder() {
      if (eventhubBuilder_ != null) {
        return eventhubBuilder_.getMessageOrBuilder();
      } else {
        return eventhub_ == null ?
            org.wso2.gateway.discovery.config.enforcer.EventHub.getDefaultInstance() : eventhub_;
      }
    }
    /**
     * <code>.wso2.discovery.config.enforcer.EventHub eventhub = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.wso2.gateway.discovery.config.enforcer.EventHub, org.wso2.gateway.discovery.config.enforcer.EventHub.Builder, org.wso2.gateway.discovery.config.enforcer.EventHubOrBuilder> 
        getEventhubFieldBuilder() {
      if (eventhubBuilder_ == null) {
        eventhubBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.wso2.gateway.discovery.config.enforcer.EventHub, org.wso2.gateway.discovery.config.enforcer.EventHub.Builder, org.wso2.gateway.discovery.config.enforcer.EventHubOrBuilder>(
                getEventhub(),
                getParentForChildren(),
                isClean());
        eventhub_ = null;
      }
      return eventhubBuilder_;
    }

    private org.wso2.gateway.discovery.config.enforcer.AuthService authService_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.wso2.gateway.discovery.config.enforcer.AuthService, org.wso2.gateway.discovery.config.enforcer.AuthService.Builder, org.wso2.gateway.discovery.config.enforcer.AuthServiceOrBuilder> authServiceBuilder_;
    /**
     * <code>.wso2.discovery.config.enforcer.AuthService authService = 5;</code>
     * @return Whether the authService field is set.
     */
    public boolean hasAuthService() {
      return authServiceBuilder_ != null || authService_ != null;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AuthService authService = 5;</code>
     * @return The authService.
     */
    public org.wso2.gateway.discovery.config.enforcer.AuthService getAuthService() {
      if (authServiceBuilder_ == null) {
        return authService_ == null ? org.wso2.gateway.discovery.config.enforcer.AuthService.getDefaultInstance() : authService_;
      } else {
        return authServiceBuilder_.getMessage();
      }
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AuthService authService = 5;</code>
     */
    public Builder setAuthService(org.wso2.gateway.discovery.config.enforcer.AuthService value) {
      if (authServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        authService_ = value;
        onChanged();
      } else {
        authServiceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AuthService authService = 5;</code>
     */
    public Builder setAuthService(
        org.wso2.gateway.discovery.config.enforcer.AuthService.Builder builderForValue) {
      if (authServiceBuilder_ == null) {
        authService_ = builderForValue.build();
        onChanged();
      } else {
        authServiceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AuthService authService = 5;</code>
     */
    public Builder mergeAuthService(org.wso2.gateway.discovery.config.enforcer.AuthService value) {
      if (authServiceBuilder_ == null) {
        if (authService_ != null) {
          authService_ =
            org.wso2.gateway.discovery.config.enforcer.AuthService.newBuilder(authService_).mergeFrom(value).buildPartial();
        } else {
          authService_ = value;
        }
        onChanged();
      } else {
        authServiceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AuthService authService = 5;</code>
     */
    public Builder clearAuthService() {
      if (authServiceBuilder_ == null) {
        authService_ = null;
        onChanged();
      } else {
        authService_ = null;
        authServiceBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AuthService authService = 5;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.AuthService.Builder getAuthServiceBuilder() {
      
      onChanged();
      return getAuthServiceFieldBuilder().getBuilder();
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AuthService authService = 5;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.AuthServiceOrBuilder getAuthServiceOrBuilder() {
      if (authServiceBuilder_ != null) {
        return authServiceBuilder_.getMessageOrBuilder();
      } else {
        return authService_ == null ?
            org.wso2.gateway.discovery.config.enforcer.AuthService.getDefaultInstance() : authService_;
      }
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AuthService authService = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.wso2.gateway.discovery.config.enforcer.AuthService, org.wso2.gateway.discovery.config.enforcer.AuthService.Builder, org.wso2.gateway.discovery.config.enforcer.AuthServiceOrBuilder> 
        getAuthServiceFieldBuilder() {
      if (authServiceBuilder_ == null) {
        authServiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.wso2.gateway.discovery.config.enforcer.AuthService, org.wso2.gateway.discovery.config.enforcer.AuthService.Builder, org.wso2.gateway.discovery.config.enforcer.AuthServiceOrBuilder>(
                getAuthService(),
                getParentForChildren(),
                isClean());
        authService_ = null;
      }
      return authServiceBuilder_;
    }

    private org.wso2.gateway.discovery.config.enforcer.AmCredentials apimCredentials_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.wso2.gateway.discovery.config.enforcer.AmCredentials, org.wso2.gateway.discovery.config.enforcer.AmCredentials.Builder, org.wso2.gateway.discovery.config.enforcer.AmCredentialsOrBuilder> apimCredentialsBuilder_;
    /**
     * <code>.wso2.discovery.config.enforcer.AmCredentials apimCredentials = 6;</code>
     * @return Whether the apimCredentials field is set.
     */
    public boolean hasApimCredentials() {
      return apimCredentialsBuilder_ != null || apimCredentials_ != null;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AmCredentials apimCredentials = 6;</code>
     * @return The apimCredentials.
     */
    public org.wso2.gateway.discovery.config.enforcer.AmCredentials getApimCredentials() {
      if (apimCredentialsBuilder_ == null) {
        return apimCredentials_ == null ? org.wso2.gateway.discovery.config.enforcer.AmCredentials.getDefaultInstance() : apimCredentials_;
      } else {
        return apimCredentialsBuilder_.getMessage();
      }
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AmCredentials apimCredentials = 6;</code>
     */
    public Builder setApimCredentials(org.wso2.gateway.discovery.config.enforcer.AmCredentials value) {
      if (apimCredentialsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        apimCredentials_ = value;
        onChanged();
      } else {
        apimCredentialsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AmCredentials apimCredentials = 6;</code>
     */
    public Builder setApimCredentials(
        org.wso2.gateway.discovery.config.enforcer.AmCredentials.Builder builderForValue) {
      if (apimCredentialsBuilder_ == null) {
        apimCredentials_ = builderForValue.build();
        onChanged();
      } else {
        apimCredentialsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AmCredentials apimCredentials = 6;</code>
     */
    public Builder mergeApimCredentials(org.wso2.gateway.discovery.config.enforcer.AmCredentials value) {
      if (apimCredentialsBuilder_ == null) {
        if (apimCredentials_ != null) {
          apimCredentials_ =
            org.wso2.gateway.discovery.config.enforcer.AmCredentials.newBuilder(apimCredentials_).mergeFrom(value).buildPartial();
        } else {
          apimCredentials_ = value;
        }
        onChanged();
      } else {
        apimCredentialsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AmCredentials apimCredentials = 6;</code>
     */
    public Builder clearApimCredentials() {
      if (apimCredentialsBuilder_ == null) {
        apimCredentials_ = null;
        onChanged();
      } else {
        apimCredentials_ = null;
        apimCredentialsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AmCredentials apimCredentials = 6;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.AmCredentials.Builder getApimCredentialsBuilder() {
      
      onChanged();
      return getApimCredentialsFieldBuilder().getBuilder();
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AmCredentials apimCredentials = 6;</code>
     */
    public org.wso2.gateway.discovery.config.enforcer.AmCredentialsOrBuilder getApimCredentialsOrBuilder() {
      if (apimCredentialsBuilder_ != null) {
        return apimCredentialsBuilder_.getMessageOrBuilder();
      } else {
        return apimCredentials_ == null ?
            org.wso2.gateway.discovery.config.enforcer.AmCredentials.getDefaultInstance() : apimCredentials_;
      }
    }
    /**
     * <code>.wso2.discovery.config.enforcer.AmCredentials apimCredentials = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.wso2.gateway.discovery.config.enforcer.AmCredentials, org.wso2.gateway.discovery.config.enforcer.AmCredentials.Builder, org.wso2.gateway.discovery.config.enforcer.AmCredentialsOrBuilder> 
        getApimCredentialsFieldBuilder() {
      if (apimCredentialsBuilder_ == null) {
        apimCredentialsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.wso2.gateway.discovery.config.enforcer.AmCredentials, org.wso2.gateway.discovery.config.enforcer.AmCredentials.Builder, org.wso2.gateway.discovery.config.enforcer.AmCredentialsOrBuilder>(
                getApimCredentials(),
                getParentForChildren(),
                isClean());
        apimCredentials_ = null;
      }
      return apimCredentialsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:wso2.discovery.config.enforcer.Config)
  }

  // @@protoc_insertion_point(class_scope:wso2.discovery.config.enforcer.Config)
  private static final org.wso2.gateway.discovery.config.enforcer.Config DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.wso2.gateway.discovery.config.enforcer.Config();
  }

  public static org.wso2.gateway.discovery.config.enforcer.Config getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Config>
      PARSER = new com.google.protobuf.AbstractParser<Config>() {
    @java.lang.Override
    public Config parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Config(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Config> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Config> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.wso2.gateway.discovery.config.enforcer.Config getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

